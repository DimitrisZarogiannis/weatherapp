{"version":3,"sources":["index.js"],"names":["dateBuilder","d","getDay","getDate","getMonth","getFullYear","Renderleft","props","className","weather","location","Date","temperature","description","Renderright","Weather","length","WeatherApp","state","input","showResults","handleChange","bind","searchCity","event","this","setState","target","value","city","fetch","result","json","resultJson","weathermap","push","shift","alert","type","onChange","placeholder","onClick","class","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2840ac37.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\n\r\n// <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n\r\n// Helper function returning current day info\r\nlet dateBuilder = (d) => {\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n    let day_full = days[d.getDay()];\r\n    let day = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return day_full + ' ' + day + ' ' + month + ' ' + year;\r\n}\r\n\r\nfunction Renderleft(props) {\r\n    return (\r\n        <div className='left' >\r\n            <div className='location-box'>\r\n                <div className='location'>{props.weather[1].location}</div>\r\n                <div className='date'>{dateBuilder(new Date())}</div>\r\n            </div>\r\n            <div className='weather-box'>\r\n                <div className='temp'>\r\n                    {props.weather[1].temperature}°C\r\n                </div>\r\n                <div className='weather'>\r\n                    {props.weather[1].description}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Renderright(props) {\r\n    return (\r\n        <div className='right' >\r\n            <div className='location-box'>\r\n                <div className='location'>{props.weather[2].location}</div>\r\n                <div className='date'>{dateBuilder(new Date())}</div>\r\n            </div>\r\n            <div className='weather-box'>\r\n                <div className='temp'>\r\n                    {props.weather[2].temperature}°C\r\n                </div>\r\n                <div className='weather'>\r\n                    {props.weather[2].description}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Weather(props) {\r\n    if (props.weather.length === 1) {\r\n        return (\r\n            <div className='row'>\r\n                <div className='column middle' >\r\n                    <div className='location-box'>\r\n                        <div className='location'>{props.weather[0].location}</div>\r\n                        <div className='date'>{dateBuilder(new Date())}</div>\r\n                    </div>\r\n                    <div className='weather-box'>\r\n                        <div className='temp'>\r\n                            {props.weather[0].temperature}°C\r\n                </div>\r\n                        <div className='weather'>\r\n                            {props.weather[0].description}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else if (props.weather.length === 2) {\r\n        return (\r\n            <div className='row'>\r\n                <Renderleft weather={props.weather}></Renderleft>\r\n                <div className='column middle' >\r\n                    <div className='location-box'>\r\n                        <div className='location'>{props.weather[0].location}</div>\r\n                        <div className='date'>{dateBuilder(new Date())}</div>\r\n                    </div>\r\n                    <div className='weather-box'>\r\n                        <div className='temp'>\r\n                            {props.weather[0].temperature}°C\r\n                </div>\r\n                        <div className='weather'>\r\n                            {props.weather[0].description}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else if (props.weather.length === 3) {\r\n        return (\r\n            <div className='row'>\r\n                <Renderleft weather={props.weather}></Renderleft>\r\n                <div className='column middle' >\r\n                    <div className='location-box'>\r\n                        <div className='location'>{props.weather[0].location}</div>\r\n                        <div className='date'>{dateBuilder(new Date())}</div>\r\n                    </div>\r\n                    <div className='weather-box'>\r\n                        <div className='temp'>\r\n                            {props.weather[0].temperature}°C\r\n                </div>\r\n                        <div className='weather'>\r\n                            {props.weather[0].description}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Renderright weather={props.weather}></Renderright> \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass WeatherApp extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            input: '',\r\n            weather: [],\r\n            showResults: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.searchCity = this.searchCity.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            input: event.target.value\r\n        });\r\n    }\r\n\r\n    async searchCity() {\r\n        let city = this.state.input;\r\n        if (city) {\r\n            const result = await fetch(`http://localhost:4000/weather?city=${city}`);\r\n            const resultJson = await result.json();\r\n            let weathermap = this.state.weather;\r\n            if (weathermap.length <= 2) {\r\n                weathermap.push(resultJson);\r\n                this.setState({\r\n                    weather: weathermap,\r\n                    showResults: true\r\n                });\r\n            }\r\n            else {\r\n                weathermap.shift();\r\n                weathermap.push(resultJson);\r\n                this.setState({\r\n                    weather: weathermap,\r\n                    showResults: true\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            alert('Search field empty! Please provide a valid city name.')\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='app'>\r\n                <main>\r\n                    <div className='Greet'>Welcome to the coolest weather application!</div>\r\n                    <label className='search-label'>Check the current weather conditions on a city of your choice!</label>\r\n                    <div className='search-box'>\r\n                        <input type='text' className='search-bar' value={this.state.input} onChange={this.handleChange} placeholder='Search by city name, if you wish...'></input>\r\n                        <button className='search-button' onClick={this.searchCity}><i class=\"fa fa-search\"></i></button>\r\n                    </div>\r\n                    <div className='weathercomp'>\r\n                        {this.state.showResults ? <Weather weather={this.state.weather} /> : null}\r\n\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <WeatherApp />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}