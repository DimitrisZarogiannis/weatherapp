{"version":3,"sources":["index.js"],"names":["Weather","props","className","weather","location","d","Date","getDay","getDate","getMonth","getFullYear","temperature","description","WeatherApp","state","input","JSON","showResults","handleChange","bind","searchCity","event","this","setState","target","value","city","fetch","result","json","resultJson","alert","type","onChange","placeholder","onClick","class","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gQAoBA,SAASA,EAAQC,GACb,OACI,6BACI,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,YAAYD,EAAME,QAAQC,UACzC,yBAAKF,UAAU,QAhBhB,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,aAF/DG,EAkBgC,IAAIC,MAd7BC,UAKJ,IAJRF,EAAEG,UAIkB,IARjB,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKzGH,EAAEI,YAGuB,IAFjCJ,EAAEK,gBAaL,yBAAKR,UAAU,eACX,yBAAKA,UAAU,QACVD,EAAME,QAAQQ,YADnB,SAGA,yBAAKT,UAAU,WACVD,EAAME,QAAQS,eAzBjB,IAACP,E,IAgCbQ,E,kDAEF,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,MAAO,GACPZ,QAASa,KACTC,aAAa,GAEjB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBARR,E,yDAWDE,GACTC,KAAKC,SAAS,CACVR,MAAOM,EAAMG,OAAOC,U,4JAKpBC,EAAOJ,KAAKR,MAAMC,O,iCAEGY,MAAM,sCAAD,OAAuCD,I,cAA3DE,E,gBACmBA,EAAOC,O,OAA1BC,E,OACNR,KAAKC,SAAS,CACVpB,QAAS2B,EACTb,aAAY,I,wBAIhBc,MAAM,yD,sIAMV,OACI,yBAAK7B,UAAU,OACX,8BACI,yBAAKA,UAAU,SAAf,+CACA,2BAAOA,UAAU,gBAAjB,kEACA,yBAAKA,UAAU,cACX,2BAAO8B,KAAK,OAAO9B,UAAU,aAAauB,MAAOH,KAAKR,MAAMC,MAAOkB,SAAUX,KAAKJ,aAAcgB,YAAY,wCAC5G,4BAAQhC,UAAU,gBAAgBiC,QAASb,KAAKF,YAAY,uBAAGgB,MAAM,mBAEzE,6BAAMd,KAAKR,MAAMG,YAAa,kBAACjB,EAAD,CAASG,QAASmB,KAAKR,MAAMX,UAAa,Y,GA7CnEkC,IAAMC,WAoD/BC,IAASC,OACL,kBAAC3B,EAAD,MACA4B,SAASC,eAAe,U","file":"static/js/main.2a38535a.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\n\r\n// <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n\r\n// Helper function returning current day info\r\nlet dateBuilder = (d) => {\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n    let day_full = days[d.getDay()];\r\n    let day = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return day_full + ' ' + day + ' ' + month + ' ' + year;\r\n}\r\n\r\n\r\nfunction Weather(props) {\r\n    return (\r\n        <div>\r\n            <div className='location-box'>\r\n                <div className='location'>{props.weather.location}</div>\r\n                <div className='date'>{dateBuilder(new Date())}</div>\r\n            </div>\r\n            <div className='weather-box'>\r\n                <div className='temp'>\r\n                    {props.weather.temperature}Â°C\r\n                </div>\r\n                <div className='weather'>\r\n                    {props.weather.description}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass WeatherApp extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            input: '',\r\n            weather: JSON,\r\n            showResults: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.searchCity = this.searchCity.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            input: event.target.value\r\n        });\r\n    }\r\n\r\n    async searchCity() {\r\n        let city = this.state.input;\r\n        if (city) {\r\n            const result = await fetch(`http://localhost:4000/weather?city=${city}`);\r\n            const resultJson = await result.json();\r\n            this.setState({\r\n                weather: resultJson,\r\n                showResults:true\r\n            });\r\n        }\r\n        else {\r\n            alert('Search field empty! Please provide a valid city name.')\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='app'>\r\n                <main>\r\n                    <div className='Greet'>Welcome to the coolest weather application!</div>\r\n                    <label className='search-label'>Check the current weather conditions on a city of your choice!</label>\r\n                    <div className='search-box'>\r\n                        <input type='text' className='search-bar' value={this.state.input} onChange={this.handleChange} placeholder='Search by city name, if you wish...'></input>\r\n                        <button className='search-button' onClick={this.searchCity}><i class=\"fa fa-search\"></i></button>\r\n                    </div>\r\n                    <div>{this.state.showResults ?<Weather weather={this.state.weather}/> : null}</div>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <WeatherApp />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}