{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0396\\u03B1\\u03C1\\u03BF-PC\\\\Documents\\\\VSC_Projects\\\\weather-app\\\\src\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n// Helper function returning current day info\n\nlet dateBuilder = d => {\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  let day_full = days[d.getDay()];\n  let day = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n  return day_full + ' ' + day + ' ' + month + ' ' + year;\n};\n\nfunction Weather(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weatherquery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, props.weather.location), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, dateBuilder(new Date()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, props.weather.temperature, \"\\xB0C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, props.weather.description)));\n}\n\nclass WeatherApp extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      weather: [],\n      showResults: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.searchCity = this.searchCity.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      input: event.target.value\n    });\n  }\n\n  async searchCity() {\n    let city = this.state.input;\n\n    if (city) {\n      const result = await fetch(`http://localhost:4000/weather?city=${city}`);\n      const resultJson = await result.json();\n      this.setState({\n        weather: push(resultJson),\n        showResults: true\n      });\n    } else {\n      alert('Search field empty! Please provide a valid city name.');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Greet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"Welcome to the coolest weather application!\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"search-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"Check the current weather conditions on a city of your choice!\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search-bar\",\n      value: this.state.input,\n      onChange: this.handleChange,\n      placeholder: \"Search by city name, if you wish...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"search-button\",\n      onClick: this.searchCity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 85\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weathercomp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, this.state.showResults ? /*#__PURE__*/React.createElement(Weather, {\n      weather: this.state.weather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 50\n      }\n    }) : null)));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(WeatherApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Ζαρο-PC/Documents/VSC_Projects/weather-app/src/client/src/index.js"],"names":["React","ReactDOM","dateBuilder","d","months","days","day_full","getDay","day","getDate","month","getMonth","year","getFullYear","Weather","props","weather","location","Date","temperature","description","WeatherApp","Component","constructor","state","input","showResults","handleChange","bind","searchCity","event","setState","target","value","city","result","fetch","resultJson","json","push","alert","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\n\r\n// <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n\r\n// Helper function returning current day info\r\nlet dateBuilder = (d) => {\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n    let day_full = days[d.getDay()];\r\n    let day = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return day_full + ' ' + day + ' ' + month + ' ' + year;\r\n}\r\n\r\n\r\nfunction Weather(props) {\r\n    return (\r\n        <div className='weatherquery'>\r\n            <div className='location-box'>\r\n                <div className='location'>{props.weather.location}</div>\r\n                <div className='date'>{dateBuilder(new Date())}</div>\r\n            </div>\r\n            <div className='weather-box'>\r\n                <div className='temp'>\r\n                    {props.weather.temperature}°C\r\n                </div>\r\n                <div className='weather'>\r\n                    {props.weather.description}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass WeatherApp extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            input: '',\r\n            weather: [],\r\n            showResults: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.searchCity = this.searchCity.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            input: event.target.value\r\n        });\r\n    }\r\n\r\n    async searchCity() {\r\n        let city = this.state.input;\r\n        if (city) {\r\n            const result = await fetch(`http://localhost:4000/weather?city=${city}`);\r\n            const resultJson = await result.json();\r\n            this.setState({\r\n                weather: push(resultJson),\r\n                showResults:true\r\n            });\r\n        }\r\n        else {\r\n            alert('Search field empty! Please provide a valid city name.')\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='app'>\r\n                <main>\r\n                    <div className='Greet'>Welcome to the coolest weather application!</div>\r\n                    <label className='search-label'>Check the current weather conditions on a city of your choice!</label>\r\n                    <div className='search-box'>\r\n                        <input type='text' className='search-bar' value={this.state.input} onChange={this.handleChange} placeholder='Search by city name, if you wish...'></input>\r\n                        <button className='search-button' onClick={this.searchCity}><i class=\"fa fa-search\"></i></button>\r\n                    </div>\r\n                    <div className='weathercomp'>\r\n                        {this.state.showResults ?<Weather weather={this.state.weather}/> : null}\r\n                   \r\n                    </div>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <WeatherApp />,\r\n    document.getElementById('root')\r\n);\r\n"]},"metadata":{},"sourceType":"module"}